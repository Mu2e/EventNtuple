# Minimal job to run TrkAna on the 'best' downstream electrons. Runs on mcs files
#include "Offline/fcl/minimalMessageService.fcl"
#include "Offline/fcl/standardServices.fcl"
#include "EventNtuple/fcl/prolog.fcl"

process_name: TADeM
source : { module_type : RootInput }
services : @local::Services.Reco
physics :
{
  producers : {
    MergeKKDeM : {
      module_type : MergeKalSeeds
      KalSeedCollections : ["KKDeM"]
      # optionally only merge selected candidates
      # a simple selector is used here, but any selector implemented as a tool can be used
      Selector : {
        tool_type : SimpleKalSeedSelector
        MinMomentum : 75.0 # MeV/c
        MaxMomentum : 300.0 #MeV/c
        MinFitConsistency : 1e-10
        MinDeltaNHitFraction : 0.05 # Consider a 5% difference in active hit count to be 'significant', and call the track more hits 'better'.  Otherwise, use fit quality to determine 'better'
        MinActiveHits : 15 # Require a reasonable # of active hits
      }
      # optionally select only the 'best' single candidate per event, where 'best' is defined by the selector
      SelectBest : true
    }
    MakeSS : @local::CommonMC.MakeSSReco
  }
  TriggerPath : [ MergeKKDeM, MakeSS ]
  analyzers : {
    TrkAnaDeM : {
      @table::EventNtupleMaker
      FitType : LoopHelix
      diagLevel : 2
      FillMCInfo : true
      FillTrkPIDInfo : false
      FillHitInfo : true
      FillTriggerInfo : false
      branches :  [
        { input: "MergeKKDeM"
          branch : "trk"
          options : { fillMC : true   genealogyDepth : -1 }
        }
      ]
#      ExtraMCStepCollectionTags : [ "compressRecoMCs:protonabsorber", "compressRecoMCs:stoppingtarget" ]
      SurfaceStepCollectionTag : "compressRecoMCs"
#      SurfaceStepCollectionTag : "MakeSS"
    }
  }
  EndPath : [TrkAnaDeM]
}
physics.trigger_paths : [ TriggerPath ]
physics.end_paths : [ EndPath ]
services.TimeTracker.printSummary: true
services.TFileService.fileName: "nts.owner.TADeM.version.sequence.root"
