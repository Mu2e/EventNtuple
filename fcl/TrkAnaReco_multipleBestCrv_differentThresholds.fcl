#include "TrkAna/fcl/TrkAnaReco.fcl"

// We want a singles Assns between reco and MC CrvCoincidenceClusters from all different collections
physics.producers.MakeCrvCoincidenceClusterMCAssns.crvCoincidenceTags : [ "SelectRecoMC:CrvCoincidenceClusterFinder", "SelectRecoMC:CrvCoincidenceClusterFinder6PEs" ]
physics.producers.MakeCrvCoincidenceClusterMCAssns.crvCoincidenceMCTags : [ "compressRecoMCs:CrvCoincidenceClusterMatchMC", "compressRecoMCs:CrvCoincidenceClusterMatchMC6PEs" ]

// Define the new BestCrv modules and add them to the path
physics.producers.BestCrv6PEsDeM : @local::BestCrvDeM
physics.producers.BestCrv6PEsDeM.crvCoincidenceTag : "SelectRecoMC:CrvCoincidenceClusterFinder6PEs"

physics.TrkAnaTrigPath : [ @sequence::physics.TrkAnaTrigPath, BestCrv6PEsDeM ]
physics.trigger_paths : [ TrkAnaTrigPath ]

// Then add them to TrkAna (NB DeM suffix not needed)
physics.analyzers.TrkAnaNeg.candidate.options.bestCrvModules : [ "BestCrv", "BestCrv6PEs" ]

// The BestCrvHitDeltaT_module.cc produces the first- and second-best crv hits.
// Here we have two different modules and want the best candidate for each so we use "first" twice...
physics.analyzers.TrkAnaNeg.candidate.options.bestCrvInstances : [ "first", "first" ]

// This names the branches, which will translate to "debestcrv" and "debestcrv6PEs"
physics.analyzers.TrkAnaNeg.candidate.options.bestCrvBranches : [ "bestcrv", "bestcrv6PEs" ]
