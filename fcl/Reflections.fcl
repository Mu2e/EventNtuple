# Minimal job to run TrkAna on selected reflections
#include "Offline/fcl/minimalMessageService.fcl"
#include "Offline/fcl/standardServices.fcl"
#include "Offline/TrkReco/fcl/prolog.fcl"
#include "EventNtuple/fcl/prolog.fcl"
BEGIN_PROLOG
TAR : {
  @table::EventNtupleMaker
  FitType : LoopHelix
  diagLevel : 2
  FillMCInfo : true
  FillTrkPIDInfo : false
  FillHitInfo : true
  FillTriggerInfo : false
  SurfaceStepCollectionTag : "compressRecoMCs"
}
TARBranch : {
  branch : "trk"
  options : { fillMC : true   genealogyDepth : -1 }
}
END_PROLOG
process_name: TAReflect
source : { module_type : RootInput }
services : @local::Services.Reco
physics :
{
  filters : {
    Reflecte : {
      @table::TrkReco.SelectReflections
      UpstreamKalSeedCollection : "KKUe"
      DownstreamKalSeedCollection : "KKDe"
      debugLevel : 1
    }
    Reflectmu : {
      @table::TrkReco.SelectReflections
      UpstreamKalSeedCollection : "KKUmu"
      DownstreamKalSeedCollection : "KKDmu"
      debugLevel : 1
    }
  }
  eTrig : [ Reflecte ]
  muTrig : [ Reflectmu ]
  analyzers : {
    TARe : {
      @table::TAR
      SelectEvents : [ "eTrig" ]
      branches : [
        { @table::TARBranch
          input: "Reflecte"
        }
      ]
    }
    TARmu : {
      @table::TAR
      SelectEvents : [ "muTrig" ]
      branches : [
        { @table::TARBranch
          input: "Reflectmu"
        }
      ]
    }
    printModule : {
      module_type : PrintModule
      PrintEvent : false
      PrintSubRun : true
      CosmicLivetimePrinter : {
        verbose : 1
      }
    } # printModule
  }
  eEnd : [ "TARe" ]
  muEnd : [ "TARmu" ]
  CLPrint : [ "printModule" ]
}

physics.trigger_paths : [ "eTrig", "muTrig"]
physics.end_paths : [ "eEnd", "muEnd", "CLPrint" ]
services.TimeTracker.printSummary: true
services.TFileService.fileName: "nts.owner.TAReflect.version.sequence.root"
