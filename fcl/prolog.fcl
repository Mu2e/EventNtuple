#include "Offline/Filters/fcl/prolog.fcl"
#include "Offline/Compression/fcl/prolog.fcl"
#include "Offline/CommonMC/fcl/prolog.fcl"
#include "Offline/fcl/TrkCaloDt.fcl"

#include "EventNtuple/fcl/prolog_crv_planes.fcl"
#include "EventNtuple/fcl/prolog_mc_reweighters.fcl"

BEGIN_PROLOG
# Track quality module
TrkQual : {
  module_type : TrackQuality
  datFilename : "Offline/TrkDiag/data/TrkQual_ANN1_v2.dat"
}
TrkQualDeM           : @local::TrkQual
TrkQualDeM.KalSeedPtrCollection : "MergeKKDeM"
TrkQualUeM           : @local::TrkQual
TrkQualUeM.KalSeedPtrCollection : "MergeKKUeM"
TrkQualDmuM          : @local::TrkQual
TrkQualDmuM.KalSeedPtrCollection : "MergeKKDmuM"
TrkQualUmuM          : @local::TrkQual
TrkQualUmuM.KalSeedPtrCollection : "MergeKKUmuM"
TrkQualDeP           : @local::TrkQual
TrkQualDeP.KalSeedPtrCollection : "MergeKKDeP"
TrkQualUeP           : @local::TrkQual
TrkQualUeP.KalSeedPtrCollection : "MergeKKUeP"
TrkQualDmuP          : @local::TrkQual
TrkQualDmuP.KalSeedPtrCollection : "MergeKKDmuP"
TrkQualUmuP          : @local::TrkQual
TrkQualUmuP.KalSeedPtrCollection : "MergeKKUmuP"
TrkQualAll          : @local::TrkQual
TrkQualAll.KalSeedPtrCollection : "MergeKKAll"
TrkQualDe           : @local::TrkQual
TrkQualDe.KalSeedPtrCollection : "MergeKKDe"


TrkQualProducers : {
  TrkQualDeM : @local::TrkQualDeM
  TrkQualUeM : @local::TrkQualUeM
  TrkQualDeP : @local::TrkQualDeP
  TrkQualUeP : @local::TrkQualUeP
  TrkQualDmuM : @local::TrkQualDmuM
  TrkQualDmuP : @local::TrkQualDmuP
  TrkQualUmuM : @local::TrkQualUmuM
  TrkQualUmuP : @local::TrkQualUmuP
  TrkQualAll : @local::TrkQualAll
  TrkQualDe : @local::TrkQualDe
}

TrkQualProducersPath : [ TrkQualDeM, TrkQualUeM, TrkQualDmuM, TrkQualDeP, TrkQualUeP, TrkQualDmuP, TrkQualUmuM, TrkQualUmuP ]

# track PID module
TrkPID : {
  module_type : TrackPID
  MaxDE : 500.0 # MeV
  DeltaTOffset : -1.15 # specific to MDC2018h
  datFilename : "Offline/TrkDiag/data/TrackPID_v1.dat"
}
# this module only makes sense for downstream electron fits
TrkPIDDeM          : @local::TrkPID
TrkPIDDeM.KalSeedPtrCollection : "MergeKKDeM"
TrkPIDDeP          : @local::TrkPID
TrkPIDDeP.KalSeedPtrCollection : "MergeKKDeP"
TrkPIDDe           : @local::TrkPID
TrkPIDDe.KalSeedPtrCollection : "MergeKKDe"
TrkPIDAll          : @local::TrkPID
TrkPIDAll.KalSeedPtrCollection : "MergeKKAll"
TrkPIDProducers : {
  TrkPIDDeM : @local::TrkPIDDeM
  TrkPIDDeP : @local::TrkPIDDeP
  TrkPIDDe : @local::TrkPIDDe
  TrkPIDAll : @local::TrkPIDAll
}
TrkPIDProducersPath : [ TrkPIDDeM, TrkPIDDeP ]

# trigger

TTProducers : {
  MergeTTApr : {
    module_type : MergeKalSeeds
    KalSeedCollections : ["TTAprKSF"]
  }
  MergeTTTpr : {
    module_type : MergeKalSeeds
    KalSeedCollections : ["TTKSF"]
  }
  MergeTTCpr : {
    module_type : MergeKalSeeds
    KalSeedCollections : ["TTCalSeedFit"]
  }
  MergeTTMpr : {
    module_type : MergeKalSeeds
    KalSeedCollections : ["TTMprKSF"]
  }
}
TTProducersPath : [ MergeTTApr, MergeTTTpr, MergeTTCpr, MergeTTMpr ]

genCountLogger: { module_type: GenEventCountReader }

AllOpt : {
  fillMC : true
  fillHits : true
  genealogyDepth : -1
  matchDepth : -1
}

# With move to using KalSeedPtr need to "merge" KalSeeds so that we get KalSeedPtr collections
MergeKK : { module_type : MergeKalSeeds }
MergeKKDeM           : @local::MergeKK
MergeKKDeM.KalSeedCollections : [ "KKDeM" ]
MergeKKUeM           : @local::MergeKK
MergeKKUeM.KalSeedCollections : [ "KKUeM" ]
MergeKKDmuM          : @local::MergeKK
MergeKKDmuM.KalSeedCollections : [ "KKDmuM" ]
MergeKKUmuM          : @local::MergeKK
MergeKKUmuM.KalSeedCollections : [ "KKUmuM" ]
MergeKKDeP           : @local::MergeKK
MergeKKDeP.KalSeedCollections : [ "KKDeP" ]
MergeKKUeP           : @local::MergeKK
MergeKKUeP.KalSeedCollections : [ "KKUeP" ]
MergeKKDmuP          : @local::MergeKK
MergeKKDmuP.KalSeedCollections : [ "KKDmuP" ]
MergeKKUmuP          : @local::MergeKK
MergeKKUmuP.KalSeedCollections : [ "KKUmuP" ]
MergeKKLine          : @local::MergeKK
MergeKKLine.KalSeedCollections : [ "KKLine" ]
MergeKKOff          : @local::MergeKK
MergeKKOff.KalSeedCollections : [ "KKCHmu" ]
MergeKKAll          : @local::MergeKK
MergeKKAll.KalSeedCollections : ["KKDeM", "KKDeP", "KKUeM", "KKUeP", "KKDmuM", "KKDmuP", "KKUmuM", "KKUmuP", # will go when all new datasets are added
  "KKDe", "KKUe", "KKDmu", "KKUmu" ] # these are the new APR outputs
MergeKKDe           : @local::MergeKK
MergeKKDe.KalSeedCollections : [ "KKDe" ]


MergeKKDeCalib : {
  @table::MergeKK
  KalSeedCollections : ["KKDe"]
  Selector : {
    tool_type : SimpleKalSeedSelector
    MinMomentum : 0.0 # MeV/c
    MaxMomentum : 300.0 #MeV/c
    MinFitConsistency : -1.0
    MinDeltaNHitFraction : 0.05 # Consider a 5% difference in active hit count to be 'significant', and call the track more hits 'better'.  Otherwise, use fit quality to determine 'better'
    MinActiveHits : 15 # Require a reasonable # of active hits
  }
  SelectBest : true # use only the 'best' De in every event
}
# filter for DeCalib tracks
  KSFDeCalib : {
    module_type : KalSeedFilter
    kalSeedCollections : ["KKDe" ]
    noInfo : true # don't produce a TriggerInfo object
    debugLevel : 0
    KalSeedCuts : [ {
      requireCaloCluster : false
      minFitCons : -1.0
      minNStrawHits : 15
      minMomentum : 40.0
      maxMomentum : 300.0
      minTanDip : -20.0
      maxTanDip : 20.0
      maxChi2DOF : 1.0e6
      maxMomErr : 1e6
      minD0 : -800.0
      maxD0 :  800.0
      minNStereo : 3
      minNPlanes : 8
    } ]
}

MergeKKProducers : {
  MergeKKDeM : @local::MergeKKDeM
  MergeKKUeM : @local::MergeKKUeM
  MergeKKDeP : @local::MergeKKDeP
  MergeKKUeP : @local::MergeKKUeP
  MergeKKDmuM : @local::MergeKKDmuM
  MergeKKDmuP : @local::MergeKKDmuP
  MergeKKUmuM : @local::MergeKKUmuM
  MergeKKUmuP : @local::MergeKKUmuP
  MergeKKLine : @local::MergeKKLine
  MergeKKOff : @local::MergeKKOff
  MergeKKAll : @local::MergeKKAll
  MergeKKDe : @local::MergeKKDe
  MergeKKDeCalib : @local::MergeKKDeCalib
}
MergeKKProducersPath : [ MergeKKAll ]
MergeKKNoFieldPath : [ MergeKKLine ]
MergeKKOffSpillPath : [ MergeKKOff ]
MergeKKSeparatePath : [ MergeKKDeM, MergeKKUeM, MergeKKDmuM, MergeKKDeP, MergeKKUeP, MergeKKDmuP, MergeKKUmuM, MergeKKUmuP ]


DeM : { input : "MergeKKDeM"
  branch : "dem"
  options : { fillMC : true   genealogyDepth : -1 matchDepth : -1 }
  trkQualTags : ["TrkQualDeM"]
  trkPIDTags : ["TrkPIDDeM"]
}
UeM : { input : "MergeKKUeM"
  branch : "uem"
  options : { fillMC : true   genealogyDepth : -1 matchDepth : -1 }
  trkQualTags : [ ]
  trkPIDTags : [ ]
}
DmuM : { input : "MergeKKDmuM"
  branch : "dmm"
  options : { fillMC : true   genealogyDepth : -1 matchDepth : -1 }
  trkQualTags : [ ]
  trkPIDTags : [ ]
}
UmuM : { input : "MergeKKUmuM"
  branch : "umm"
  options : { fillMC : true   genealogyDepth : -1 matchDepth : -1 }
  trkQualTags : [ ]
  trkPIDTags : [ ]
}
DeP : { input : "MergeKKDeP"
  branch : "dep"
  options : { fillMC : true   genealogyDepth : -1 }
  trkQualTags : [ ]
  trkPIDTags : [ ]
}
UeP : { input : "MergeKKUeP"
  branch : "uep"
  options : { fillMC : true   genealogyDepth : -1 matchDepth : -1 }
  trkQualTags : [ ]
  trkPIDTags : [ ]
}
DmuP : { input : "MergeKKDmuP"
  branch : "dmp"
  trkQualTags : [ ]
  trkPIDTags : [ ]
}
UmuP : { input : "MergeKKUmuP"
  branch : "ump"
  options : { fillMC : true   genealogyDepth : -1 matchDepth : -1 }
  trkQualTags : [ ]
  trkPIDTags : [ ]
}
Ext : { input : "MergeKKLine"
  branch : "trk"
  options : { fillMC : true   genealogyDepth : -1 matchDepth : -1 fillHits : true }
  trkQualTags : [ ]
  trkPIDTags : [ ]
}
Off : { input : "MergeKKOff"
  branch : "trk"
  options : { fillMC : true   genealogyDepth : -1 matchDepth : -1 fillHits : true }
  trkQualTags : [ ]
  trkPIDTags : [ ]
}
All : { input : "MergeKKAll"
  branch : "trk"
  options : { fillHits : true fillMC : true   genealogyDepth : -1 matchDepth : -1 }
  trkQualTags : ["TrkQualAll"]
  trkPIDTags : ["TrkPIDAll"]
}
DeCalib : { input : "MergeKKDeCalib"
  branch : "trk"
  options : { fillMC : true fillHits : true  genealogyDepth : -1 matchDepth : -1 }
  trkQualTags : [ ]
  trkPIDTags : [ ]
}
De : { input : "MergeKKDe"
  branch : "de"
  options : { fillMC : true   genealogyDepth : -1 matchDepth : -1 }
  trkQualTags : ["TrkQualDe"]
  trkPIDTags : ["TrkPIDDe"]
}

EventNtupleMaker : {
  module_type : EventNtupleMaker
  branches : [ @local::All ]
  RecoCountTag : "SelectReco"
  PBITag : "PBISim"
  PBTTag : "EWMProducer"
  PBTMCTag : "EWMProducer"
  CrvCoincidencesTag : "SelectReco:CrvCoincidenceClusterFinder"
  CrvCoincidenceMCsTag : "compressRecoMCs:CrvCoincidenceClusterMatchMC"
  CrvRecoPulsesTag : "SelectReco"
  CrvStepsTag : "compressRecoMCs"
  SimParticlesTag : "compressRecoMCs"
  MCTrajectoriesTag : "compressRecoMCs"
  CaloClustersTag : "CaloClusterMaker"
  CaloHitsTag : "CaloHitMaker"
  CaloRecoDigisTag : ""
  CaloDigisTag : "SelectReco"
  FillCaloClusters : true
  FillCaloHits : true
  FillCaloRecoDigis : false
  FillCaloDigis : false
  CrvDigiMCsTag : "compressRecoMCs"
  CrvDigisTag : "SelectReco"
  CrvCoincidenceClusterMCAssnsTag : "CrvCoincidenceClusterMCAssns"
  CrvPlaneY : @local::crvPlaneY.CRV_T
  FillMCInfo : true
  FillTrkQual : true
  FillTrkPIDInfo : false
  FillHitInfo : true
  FillHitCalibInfo : false
  FillTriggerInfo : false
  TriggerProcessName : "Mix"
  FillCRVCoincs : true
  FillCRVPulses : false
  FillCRVDigis : false
  FillCaloMC : true
  FillHelixInfo : false
  PrimaryParticleTag : "compressRecoMCs"
  KalSeedMCAssns : "SelectReco"
  CaloClusterMCTag : "compressRecoMCs"
  InfoMCStructHelper : {
    SimParticleCollectionTag : "compressRecoMCs"
    MinGoodMomFraction : 0.9
    MaxVDDt : 5 # ns
  }
#  ExtraMCStepCollectionTags : [ "compressRecoMCs:protonabsorber", "compressRecoMCs:stoppingtarget" ]
  ExtraMCStepCollectionTags : []
  SurfaceStepCollectionTag : "compressRecoMCs"
  FitType : LoopHelix
}
# instance for processing trigger (digitization) output from simulation
EventNtupleMakerTTMC: {
  @table::EventNtupleMaker
  diagLevel : 2
  FillCRVCoincs : false
  FillCaloMC : false
  FillTriggerInfo : true
  FillTrkPIDInfo : false
  FillHitInfo : true
  PrimaryParticleTag: "compressDigiMCs"
  MCTrajectoriesTag: "compressDigiMCs"
  FitType : LoopHelix
  TriggerProcessName : "Digitize"
  SimParticlesTag : "compressDigiMCs"
  ExtraMCStepCollectionTags: []
  InfoMCStructHelper : {
    MinGoodMomFraction : 0.9
    MaxVDDt : 5 # ns
    SimParticleCollectionTag : "compressDigiMCs"
  }
}

TTMCBranch : {
  branch : "trk"
  options : { fillMC : true  fillHits : true genealogyDepth : -1 matchDepth : -1 }
}

EventNtuple : {
  producers: {
    PBIWeight : @local::PBIWeight
    @table::TrkQualProducers
    @table::TrkPIDProducers
    @table::MergeKKProducers
  }

  analyzers : {
    EventNtuple : { @table::EventNtupleMaker  }
    genCountLogger : @local::genCountLogger
  }

  #  TrigSequence : [ PBIWeight, @sequence::TrkQualProducersPath, @sequence::TrkPIDProducersPath]
  Path : [ @sequence::MergeKKProducersPath, PBIWeight, TrkQualAll, TrkPIDAll ]
  PathExt : [ @sequence::MergeKKNoFieldPath ]
  PathOff : [ @sequence::MergeKKOffSpillPath ]
  PathSeparate : [ @sequence::MergeKKSeparatePath, PBIWeight, @sequence::TrkQualProducersPath]
  PathNoMC : [ @sequence::MergeKKProducersPath, TrkQualAll, TrkPIDAll ]
  EndPath : [ EventNtuple, genCountLogger ]
  EndPathNoMC : [ EventNtuple ]

}

# Instance of EventNtuple for DeCalib
ENDeCalib : {
  @table::EventNtupleMaker
  hasTracks : true
  FitType : LoopHelix
  branches :  [
    { input: "MergeKKDeCalib"
      branch : "trk"
      trkQualTags : ["TrkQualDe"]
      options : { fillMC : true fillHits : true  genealogyDepth : -1 }
    }
  ]
  SelectEvents : [ TriggerPath ]
}

END_PROLOG
