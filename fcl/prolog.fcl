#include "Offline/Filters/fcl/prolog.fcl"
#include "Offline/Compression/fcl/prolog.fcl"
#include "Offline/CommonMC/fcl/prolog.fcl"
#include "Offline/fcl/TrkCaloDt.fcl"

#include "EventNtuple/fcl/prolog_mc_reweighters.fcl"

BEGIN_PROLOG
# Track quality module
TrkQual : {
  module_type : TrackQuality
  datFilename : "Offline/TrkDiag/data/TrkQual_ANN1_v1.dat"
}
TrkQualDeM           : @local::TrkQual
TrkQualDeM.KalSeedPtrCollection : "MergeKKDeM"
TrkQualUeM           : @local::TrkQual
TrkQualUeM.KalSeedPtrCollection : "MergeKKUeM"
TrkQualDmuM          : @local::TrkQual
TrkQualDmuM.KalSeedPtrCollection : "MergeKKDmuM"
TrkQualUmuM          : @local::TrkQual
TrkQualUmuM.KalSeedPtrCollection : "MergeKKUmuM"
TrkQualDeP           : @local::TrkQual
TrkQualDeP.KalSeedPtrCollection : "MergeKKDeP"
TrkQualUeP           : @local::TrkQual
TrkQualUeP.KalSeedPtrCollection : "MergeKKUeP"
TrkQualDmuP          : @local::TrkQual
TrkQualDmuP.KalSeedPtrCollection : "MergeKKDmuP"
TrkQualUmuP          : @local::TrkQual
TrkQualUmuP.KalSeedPtrCollection : "MergeKKUmuP"
TrkQualAll          : @local::TrkQual
TrkQualAll.KalSeedPtrCollection : "MergeKKAll"


TrkQualProducers : {
  TrkQualDeM : @local::TrkQualDeM
  TrkQualUeM : @local::TrkQualUeM
  TrkQualDeP : @local::TrkQualDeP
  TrkQualUeP : @local::TrkQualUeP
  TrkQualDmuM : @local::TrkQualDmuM
  TrkQualDmuP : @local::TrkQualDmuP
  TrkQualUmuM : @local::TrkQualUmuM
  TrkQualUmuP : @local::TrkQualUmuP
  TrkQualAll : @local::TrkQualAll
}
TrkQualProducersPath : [ TrkQualDeM, TrkQualUeM, TrkQualDmuM, TrkQualDeP, TrkQualUeP, TrkQualDmuP, TrkQualUmuM, TrkQualUmuP ]


# track PID module
TrkPID : {
  module_type : TrackPID
  MaxDE : 5.0 # MeV
  DeltaTOffset : -1.15 # specific to MDC2018h
  MVAConfig : { MVAWeights : "Offline/TrkDiag/data/TrkCaloHitPID.weights.xml"}
}
# this module only makes sense for downstream electron fits
TrkPIDDeM          : @local::TrkPID
TrkPIDDeM.KalSeedCollection : "KKDeM"
TrkPIDDeP          : @local::TrkPID
TrkPIDDeP.KalSeedCollection : "KKDeP"
TrkPIDProducers : {
  TrkPIDDeM : @local::TrkPIDDeM
  TrkPIDDeP : @local::TrkPIDDeP
}
TrkPIDProducersPath : [ TrkPIDDeM, TrkPIDDeP ]

genCountLogger: { module_type: GenEventCountReader }

AllOpt : {
  fillMC : true
  trkpid : "TrkPID"
  fillTrkPID : true
  fillHits : true
  genealogyDepth : -1
  matchDepth : -1
}

# With move to using KalSeedPtr need to "merge" KalSeeds so that we get KalSeedPtr collections
MergeKK : { module_type : MergeKalSeeds }
MergeKKDeM           : @local::MergeKK
MergeKKDeM.KalSeedCollections : [ "KKDeM" ]
MergeKKUeM           : @local::MergeKK
MergeKKUeM.KalSeedCollections : [ "KKUeM" ]
MergeKKDmuM          : @local::MergeKK
MergeKKDmuM.KalSeedCollections : [ "KKDmuM" ]
MergeKKUmuM          : @local::MergeKK
MergeKKUmuM.KalSeedCollections : [ "KKUmuM" ]
MergeKKDeP           : @local::MergeKK
MergeKKDeP.KalSeedCollections : [ "KKDeP" ]
MergeKKUeP           : @local::MergeKK
MergeKKUeP.KalSeedCollections : [ "KKUeP" ]
MergeKKDmuP          : @local::MergeKK
MergeKKDmuP.KalSeedCollections : [ "KKDmuP" ]
MergeKKUmuP          : @local::MergeKK
MergeKKUmuP.KalSeedCollections : [ "KKUmuP" ]
MergeKKLine          : @local::MergeKK
MergeKKLine.KalSeedCollections : [ "KKLine" ]
MergeKKAll          : @local::MergeKK
MergeKKAll.KalSeedCollections : ["KKDeM", "KKDeP", "KKUeM", "KKUeP", "KKDmuM", "KKDmuP", "KKUmuM", "KKUmuP" ]

MergeKKProducers : {
  MergeKKDeM : @local::MergeKKDeM
  MergeKKUeM : @local::MergeKKUeM
  MergeKKDeP : @local::MergeKKDeP
  MergeKKUeP : @local::MergeKKUeP
  MergeKKDmuM : @local::MergeKKDmuM
  MergeKKDmuP : @local::MergeKKDmuP
  MergeKKUmuM : @local::MergeKKUmuM
  MergeKKUmuP : @local::MergeKKUmuP
  MergeKKLine : @local::MergeKKLine
  MergeKKAll : @local::MergeKKAll
}
MergeKKProducersPath : [ MergeKKAll ]
MergeKKNoFieldPath : [ MergeKKLine ]
MergeKKSeparatePath : [ MergeKKDeM, MergeKKUeM, MergeKKDmuM, MergeKKDeP, MergeKKUeP, MergeKKDmuP, MergeKKUmuM, MergeKKUmuP ]


DeM : { input : "MergeKKDeM"
  branch : "dem"
  options : { fillMC : true   genealogyDepth : -1 matchDepth : -1 }
  trkQualTag : "TrkQualDeM"
}
UeM : { input : "MergeKKUeM"
  branch : "uem"
  options : { fillMC : true   genealogyDepth : -1 matchDepth : -1 }
}
DmuM : { input : "MergeKKDmuM"
  branch : "dmm"
  options : { fillMC : true   genealogyDepth : -1 matchDepth : -1 }
}
UmuM : { input : "MergeKKUmuM"
  branch : "umm"
  options : { fillMC : true   genealogyDepth : -1 matchDepth : -1 }
}
DeP : { input : "MergeKKDeP"
  branch : "dep"
  options : { fillMC : true   genealogyDepth : -1 }
}
UeP : { input : "MergeKKUeP"
  branch : "uep"
  options : { fillMC : true   genealogyDepth : -1 matchDepth : -1 }
}
DmuP : { input : "MergeKKDmuP"
  branch : "dmp"
}
UmuP : { input : "MergeKKUmuP"
  branch : "ump"
  options : { fillMC : true   genealogyDepth : -1 matchDepth : -1 }
}
Ext : { input : "MergeKKLine"
  branch : "kl"
  options : { fillMC : true   genealogyDepth : -1 matchDepth : -1 }
}
All : { input : "MergeKKAll"
  branch : "trk"
  options : { fillHits : true fillMC : true   genealogyDepth : -1 matchDepth : -1 }
  trkQualTag : "TrkQualAll"
}


EventNtupleMaker : {
  module_type : EventNtupleMaker
  branches : [ @local::All ]
  RecoCountTag : "SelectRecoMC"
  PBITag : "PBISim"
  PBTTag : "EWMProducer"
  PBTMCTag : "EWMProducer"
  CrvCoincidencesTag : "SelectRecoMC:CrvCoincidenceClusterFinder"
  CrvCoincidenceMCsTag : "compressRecoMCs:CrvCoincidenceClusterMatchMC"
  CrvRecoPulsesTag : "SelectRecoMC"
  CrvStepsTag : "compressRecoMCs"
  SimParticlesTag : "compressRecoMCs"
  MCTrajectoriesTag : "compressRecoMCs"
  CrvDigiMCsTag : "compressRecoMCs"
  CrvDigisTag : "SelectRecoMC"
  CrvCoincidenceClusterMCAssnsTag : "CrvCoincidenceClusterMCAssns"
  CrvPlaneY : 2653
  FillMCInfo : true
  FillTrkPIDInfo : false
  FillHitInfo : true
  FillTriggerInfo : false
  TriggerProcessName : "Mix"
  FillCRVCoincs : true
  FillCRVPulses : false
  FillCRVDigis : false
  FillCaloMC : true
  FillHelixInfo : false
  PrimaryParticleTag : "compressRecoMCs"
  KalSeedMCAssns : "SelectRecoMC"
  CaloClusterMCTag : "compressRecoMCs"
  InfoMCStructHelper : {
    SimParticleCollectionTag : "compressRecoMCs"
    MinGoodMomFraction : 0.9
    MaxVDDt : 5 # ns
  }
#  ExtraMCStepCollectionTags : [ "compressRecoMCs:protonabsorber", "compressRecoMCs:stoppingtarget" ]
  ExtraMCStepCollectionTags : []
  SurfaceStepCollectionTag : "MakeSS"
  FitType : LoopHelix
}

EventNtuple : {
  producers: {
    PBIWeight : @local::PBIWeight
    @table::TrkQualProducers
    @table::TrkPIDProducers
    @table::MergeKKProducers
    # patch for SurfaceSteps in MDC2020
    MakeSS : @local::CommonMC.MakeSSReco
  }

  analyzers : {
    EventNtuple : { @table::EventNtupleMaker  }
    genCountLogger : @local::genCountLogger
  }

  #  TrigSequence : [ PBIWeight, @sequence::TrkQualProducersPath, @sequence::TrkPIDProducersPath]
  Path : [ @sequence::MergeKKProducersPath, PBIWeight, MakeSS, TrkQualAll ]
  PathNoMakeSS : [ @sequence::MergeKKProducersPath, PBIWeight, TrkQualAll ]
  PathExt : [ @sequence::MergeKKNoFieldPath ]
  PathSeparate : [ @sequence::MergeKKSeparatePath, PBIWeight, MakeSS, @sequence::TrkQualProducersPath]
  PathNoMC : [ @sequence::MergeKKProducersPath, TrkQualAll ]
  EndPath : [ EventNtuple, genCountLogger ]
  EndPathNoMC : [ EventNtuple ]

}

END_PROLOG
