//
// TrkInfoMC: array branch containing MC info about the particle which generated the majority of the hits used in this track. Example structure: [ particle1, particle2, ..., particleN ]
// All momenta are in units of MeV/c, time in nsec WRT when the proton bunch pulse peak hits the production target,
// positions are in mm WRT the center of the tracker.
// Dave Brown (LBNL)
//
#ifndef TrkInfoMC_HH
#define TrkInfoMC_HH

namespace mu2e
{
  struct TrkInfoMC {
    bool valid = false; // whether this information is valid or not (for example, if the MC particle was compressed away in a prior stage, then this would be invalid)
    int ndigi = 0; // number of true straw digitizations (both ends) generated by the primary particle
    int ndigigood = 0; // number of true straw digitizations where the primary particle (not a delta-ray) crossed threshold
    int nhits = 0; // number of hits on the track that were generated by the primary particle
    int nactive = 0; // number of used hits on the track that were generated by the primary particle
    int nambig = 0; // number of true hits where the reconstruction assigned the correct left-right ambiguity
    int nipaup = 0; // number of upstream IPA surface steps
    int nipadown = 0; // number of downstream IPA surface steps
    int nstup = 0; // number of upstream stopping target foil surface steps
    int nstdown = 0; // number of downstream stopping target foil surface steps
    float maxr = 0.; // true max radius calculated using the LoopHelix constructor
    float rad = 0.; // true track parameter (radius), see LoopHelix
    float lam = 0.; // true track parameter (lambda), see LoopHelix
    float cx = 0.; // true track parameter (cx), see LoopHelix
    float cy = 0.; // true track parameter (cy), see LoopHelix
    float phi0 = 0.; // true track parameter (phi0), see LoopHelix
    float t0 = 0.; // true track parameter (time)

    void reset() { *this = TrkInfoMC(); }
  };
}
#endif
